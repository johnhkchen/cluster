---
- name: Kubernetes Cluster Setup and Validation
  hosts: localhost
  connection: local
  gather_facts: true
  vars:
    cluster_name: "dev-cluster"
    namespace: "default"
    
  tasks:
    - name: Check if kubectl is available
      command: kubectl version --client
      register: kubectl_check
      failed_when: kubectl_check.rc != 0
      
    - name: Check if kind is available  
      command: kind version
      register: kind_check
      failed_when: kind_check.rc != 0
      
    - name: Display tool versions
      debug:
        msg: |
          kubectl: {{ kubectl_check.stdout_lines[0] if kubectl_check.stdout_lines else 'Not found' }}
          kind: {{ kind_check.stdout if kind_check.stdout else 'Not found' }}
    
    - name: Check if kind cluster exists
      command: kind get clusters
      register: existing_clusters
      failed_when: false
      
    - name: Create kind cluster if it doesn't exist
      command: kind create cluster --name {{ cluster_name }} --config kind-configs/basic.yaml
      when: cluster_name not in existing_clusters.stdout
      register: cluster_creation
      
    - name: Wait for cluster to be ready
      command: kubectl wait --for=condition=Ready nodes --all --timeout=300s
      when: cluster_creation.changed or cluster_name in existing_clusters.stdout
      
    - name: Get cluster info
      command: kubectl cluster-info
      register: cluster_info
      
    - name: Display cluster information
      debug:
        msg: "{{ cluster_info.stdout_lines }}"
        
    - name: Get all nodes
      command: kubectl get nodes -o wide
      register: nodes_info
      
    - name: Display nodes information
      debug:
        msg: "{{ nodes_info.stdout_lines }}"
        
    - name: Create test namespace
      kubernetes.core.k8s:
        name: test-apps
        api_version: v1
        kind: Namespace
        state: present
      when: ansible_facts['os_family'] != "Windows"
      
    - name: Deploy sample nginx application
      kubernetes.core.k8s:
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx-test
            namespace: test-apps
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: nginx-test
            template:
              metadata:
                labels:
                  app: nginx-test
              spec:
                containers:
                - name: nginx
                  image: nginx:1.21
                  ports:
                  - containerPort: 80
        state: present
      when: ansible_facts['os_family'] != "Windows"
      
    - name: Create service for nginx
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: nginx-test-service
            namespace: test-apps
          spec:
            selector:
              app: nginx-test
            ports:
            - protocol: TCP
              port: 80
              targetPort: 80
              nodePort: 30080
            type: NodePort
        state: present
      when: ansible_facts['os_family'] != "Windows"
      
    - name: Wait for nginx deployment to be ready
      command: kubectl wait --for=condition=available --timeout=300s deployment/nginx-test -n test-apps
      when: ansible_facts['os_family'] != "Windows"
      
    - name: Get deployment status
      command: kubectl get deployments,pods,services -n test-apps
      register: app_status
      when: ansible_facts['os_family'] != "Windows"
      
    - name: Display application status
      debug:
        msg: "{{ app_status.stdout_lines }}"
      when: ansible_facts['os_family'] != "Windows"
      
    - name: Test application connectivity
      uri:
        url: "http://localhost:30080"
        method: GET
        timeout: 10
      register: app_test
      failed_when: false
      when: ansible_facts['os_family'] != "Windows"
      
    - name: Display connectivity test results
      debug:
        msg: |
          Application test status: {{ app_test.status | default('Failed to connect') }}
          {% if app_test.status == 200 %}
          ✅ Nginx is accessible at http://localhost:30080
          {% else %}
          ❌ Nginx is not accessible. Check port forwarding or try: kubectl port-forward -n test-apps svc/nginx-test-service 8080:80
          {% endif %}
      when: ansible_facts['os_family'] != "Windows"